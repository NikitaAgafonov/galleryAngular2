{"version":3,"file":"popup.component.js","sourceRoot":"","sources":["popup.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,YAAY,EAAE,KAAK,EAAE,MAAM,EAAU,MAAM,eAAe,CAAC;AAgC/E,IAAa,cAAc,GAA3B;IAgBI;QAbU,YAAO,GAAG,IAAI,YAAY,EAAW,CAAC;QACtC,WAAM,GAAG,IAAI,YAAY,EAAW,CAAC;QACrC,WAAM,GAAG,IAAI,YAAY,EAAW,CAAC;QAa3C,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAC,CAAC,KAAK;YAEpC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,KAAG,EAAE,CAAC;gBAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YAEpC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,KAAG,EAAE,CAAC;gBAAC,IAAI,CAAC,IAAI,EAAE,CAAC;QAExC,CAAC,CAAC,CAAC;IAEP,CAAC;IAED,QAAQ;QAEJ,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,MAAM,GAAG,mBAAmB,CAAC;QAGlC,IAAI,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAE5C,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC;QAEnC,OAAO,CAAC,MAAM,GAAG;YAEb,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC;YACnC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAE1B,CAAC,CAAA;IAEL,CAAC;IAED,IAAI;QAEA,EAAE,CAAA,CAAC,IAAI,CAAC,QAAQ,CAAC;YACb,OAAO;iBACF,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;iBAC3B,IAAI,CAAC,MAAM,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;IAEzC,CAAC;IAED,IAAI;QAEA,EAAE,CAAA,CAAC,IAAI,CAAC,QAAQ,CAAC;YACb,OAAO;iBACF,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;iBAC3B,IAAI,CAAC,MAAM,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;IAEzC,CAAC;IAED,KAAK,CAAC,KAAS;QAEX,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,KAAG,OAAO,IAAI,KAAK,CAAC,MAAM,CAAC,SAAS,KAAG,yBAAyB,CAAC;YACvF,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IAE5B,CAAC;CAEJ,CAAA;AArEa;IAAT,MAAM,EAAE;;+CAAuC;AACtC;IAAT,MAAM,EAAE;;8CAAsC;AACrC;IAAT,MAAM,EAAE;;8CAAsC;AAGtC;IAAR,KAAK,EAAE;;2CAAS;AACR;IAAR,KAAK,EAAE;;gDAAmB;AAClB;IAAR,KAAK,EAAE;;gDAAmB;AAVlB,cAAc;IA9B1B,SAAS,CAAC;QAEP,QAAQ,EAAE,OAAO;QAEjB,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;KAwBT;KACJ,CAAC;;GACW,cAAc,CAwE1B;SAxEY,cAAc","sourcesContent":["import { Component, EventEmitter, Input, Output, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n\r\n    selector: 'popup',\r\n\r\n    template: `\r\n        <div class=\"popup\" (click)=\"close($event)\">\r\n            <div class=\"popup__content\">\r\n                <div class=\"popup__content_header\">\r\n                    <div class=\"popup__content_name\">\r\n                        {{img.title}}\r\n                    </div>\r\n                    <div class=\"popup__content_close\">\r\n                        <!--<span class=\"glyphicon glyphicon-remove-sign\"></span>-->\r\n                        <img src=\"./img/close.png\" class=\"popup__content_closeImg\" alt=\"\" />\r\n                    </div>\r\n                </div>\r\n                <div class=\"popup__content_image\">\r\n                    <img class=\"left\" [class.hidden]=\"!havePrev\" src=\"./img/left_popup.png\" (click)=\"prev()\" />\r\n                    <div class=\"center\" >\r\n                        <img [class.thumbnail]=\"loadedImg\" (click)=\"next()\" src=\"{{srcImg}}\" />\r\n                    </div>\r\n                    <img class=\"right\" [class.hidden]=\"!haveNext\" src=\"./img/right_popup.png\"  (click)=\"next()\" />\r\n                </div>\r\n                <div class=\"popup__content_footer\">\r\n                    Author: {{img.author}}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    `,\r\n})\r\nexport class PopupComponent implements OnInit {\r\n\r\n\r\n    @Output() onClose = new EventEmitter<boolean>();\r\n    @Output() onNext = new EventEmitter<boolean>();\r\n    @Output() onPrev = new EventEmitter<boolean>();\r\n\r\n\r\n    @Input() img: {};\r\n    @Input() haveNext: boolean;\r\n    @Input() havePrev: boolean;\r\n\r\n\r\n    private srcImg: any;\r\n    private loadedImg: boolean;\r\n\r\n    constructor() {\r\n\r\n        window.addEventListener('keydown',(event) => {\r\n\r\n            if (event.keyCode===37) this.prev();\r\n\r\n            if (event.keyCode===39) this.next();\r\n\r\n        });\r\n\r\n    }\r\n\r\n    ngOnInit () {\r\n\r\n        this.loadedImg = false;\r\n        this.srcImg = './img/loading.gif';\r\n\r\n\r\n        let imgLoad = document.createElement('img');\r\n\r\n        imgLoad.src = this.img.img.XL.href;\r\n\r\n        imgLoad.onload = () => {\r\n\r\n            this.srcImg = this.img.img.XL.href;\r\n            this.loadedImg = true;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    next() {\r\n\r\n        if(this.haveNext)\r\n            Promise\r\n                .resolve(this.onNext.emit())\r\n                .then(() => this.ngOnInit());\r\n\r\n    }\r\n\r\n    prev() {\r\n\r\n        if(this.havePrev)\r\n            Promise\r\n                .resolve(this.onPrev.emit())\r\n                .then(() => this.ngOnInit());\r\n\r\n    }\r\n\r\n    close(event:any) {\r\n\r\n        if (event.target.className==='popup' || event.target.className==='popup__content_closeImg')\r\n            this.onClose.emit();\r\n\r\n    }\r\n\r\n}"]}